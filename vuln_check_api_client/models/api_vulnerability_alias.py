from collections.abc import Mapping
from typing import Any, TypeVar, Union

from attrs import define as _attrs_define
from attrs import field as _attrs_field

from ..types import UNSET, Unset

T = TypeVar("T", bound="ApiVulnerabilityAlias")


@_attrs_define
class ApiVulnerabilityAlias:
    """
    Attributes:
        alias (Union[Unset, str]):
        cve (Union[Unset, str]):
        reference_url (Union[Unset, str]):
    """

    alias: Union[Unset, str] = UNSET
    cve: Union[Unset, str] = UNSET
    reference_url: Union[Unset, str] = UNSET
    additional_properties: dict[str, Any] = _attrs_field(init=False, factory=dict)

    def to_dict(self) -> dict[str, Any]:
        alias = self.alias

        cve = self.cve

        reference_url = self.reference_url

        field_dict: dict[str, Any] = {}
        field_dict.update(self.additional_properties)
        field_dict.update({})
        if alias is not UNSET:
            field_dict["alias"] = alias
        if cve is not UNSET:
            field_dict["cve"] = cve
        if reference_url is not UNSET:
            field_dict["reference_url"] = reference_url

        return field_dict

    @classmethod
    def from_dict(cls: type[T], src_dict: Mapping[str, Any]) -> T:
        d = dict(src_dict)
        alias = d.pop("alias", UNSET)

        cve = d.pop("cve", UNSET)

        reference_url = d.pop("reference_url", UNSET)

        api_vulnerability_alias = cls(
            alias=alias,
            cve=cve,
            reference_url=reference_url,
        )

        api_vulnerability_alias.additional_properties = d
        return api_vulnerability_alias

    @property
    def additional_keys(self) -> list[str]:
        return list(self.additional_properties.keys())

    def __getitem__(self, key: str) -> Any:
        return self.additional_properties[key]

    def __setitem__(self, key: str, value: Any) -> None:
        self.additional_properties[key] = value

    def __delitem__(self, key: str) -> None:
        del self.additional_properties[key]

    def __contains__(self, key: str) -> bool:
        return key in self.additional_properties
